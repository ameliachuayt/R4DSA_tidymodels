[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "1 + 1\n\n[1] 2"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "R4DSA_tidymodels",
    "section": "",
    "text": "To learn more about Quarto websites visit https://quarto.org/docs/websites.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "TM_Hands-on_Ex1/TM_Hands-on_Ex1.html",
    "href": "TM_Hands-on_Ex1/TM_Hands-on_Ex1.html",
    "title": "Hands-on Ex1 - TidyModels",
    "section": "",
    "text": "In this hands-on exercise, we will explore the infer package to perform statistical inference testing.\nFrom the site:\nThe package is centered around 4 main verbs, supplemented with many utilities to visualize and extract value from their outputs.\n\nspecify() allows you to specify the variable, or relationship between variables, that you're interested in.\nhypothesize() allows you to declare the null hypothesis.\ngenerate() allows you to generate data reflecting the null hypothesis.\ncalculate() allows you to calculate a distribution of statistics from the generated data to form the null distribution."
  },
  {
    "objectID": "TM_Hands-on_Ex1/TM_Hands-on_Ex1.html#installing-and-loading-packages",
    "href": "TM_Hands-on_Ex1/TM_Hands-on_Ex1.html#installing-and-loading-packages",
    "title": "Hands-on Ex1 - TidyModels",
    "section": "Installing and loading packages",
    "text": "Installing and loading packages\n\npacman::p_load(tidyverse, tidymodels)"
  },
  {
    "objectID": "TM_Hands-on_Ex1/TM_Hands-on_Ex1.html#importing-data",
    "href": "TM_Hands-on_Ex1/TM_Hands-on_Ex1.html#importing-data",
    "title": "Hands-on Ex1 - TidyModels",
    "section": "Importing Data",
    "text": "Importing Data\n\nexam <- read_csv(\"data\\\\Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "TM_Hands-on_Ex1/TM_Hands-on_Ex1.html#exploratory-data-analysis",
    "href": "TM_Hands-on_Ex1/TM_Hands-on_Ex1.html#exploratory-data-analysis",
    "title": "Hands-on Ex1 - TidyModels",
    "section": "Exploratory Data Analysis",
    "text": "Exploratory Data Analysis\n\nggplot(data = exam,\n       aes(x=GENDER, y = MATHS)) +\n  geom_boxplot() + \n  ylab(\"Math Scores\") #or labs(y = \"Math Scores\")"
  },
  {
    "objectID": "TM_Hands-on_Ex1/TM_Hands-on_Ex1.html#summary-statistics",
    "href": "TM_Hands-on_Ex1/TM_Hands-on_Ex1.html#summary-statistics",
    "title": "Hands-on Ex1 - TidyModels",
    "section": "Summary Statistics",
    "text": "Summary Statistics\n\nexam %>%\n  group_by(GENDER) %>%\n  summarize(n = n(), \n            mean_score = mean(MATHS),\n            std_dev = sd(MATHS))\n\n# A tibble: 2 × 4\n  GENDER     n mean_score std_dev\n  <chr>  <int>      <dbl>   <dbl>\n1 Female   170       70.0    18.7\n2 Male     152       68.6    21.4\n\n\nWe can see that the average scores for females are higher than males. On the other hand, female’s standard deviation is lower than males. Let’s investigate further - in the next section, we will seek to find out if the average scores of females are higher than males using approporiate statistical methods."
  },
  {
    "objectID": "TM_Hands-on_Ex1/TM_Hands-on_Ex1.html#specify-variables",
    "href": "TM_Hands-on_Ex1/TM_Hands-on_Ex1.html#specify-variables",
    "title": "Hands-on Ex1 - TidyModels",
    "section": "Specify Variables",
    "text": "Specify Variables\nIn the code chunk below, specify()from infer package allows us to specify the variables that we will need for the statistical test. Do note that the base file exam needs to be in a tibble data frame. The formula must be specified such that the response variable (qualitative data) is on the left and explanatory (categorical data) on the right.\n\nexam %>%\n  specify(formula = MATHS~GENDER)\n\nResponse: MATHS (numeric)\nExplanatory: GENDER (factor)\n# A tibble: 322 × 2\n   MATHS GENDER\n   <dbl> <fct> \n 1     9 Male  \n 2    22 Female\n 3    16 Male  \n 4    77 Male  \n 5    11 Male  \n 6    16 Female\n 7    21 Male  \n 8    18 Male  \n 9    19 Male  \n10    49 Male  \n# … with 312 more rows"
  },
  {
    "objectID": "TM_Hands-on_Ex1/TM_Hands-on_Ex1.html#hypothesis",
    "href": "TM_Hands-on_Ex1/TM_Hands-on_Ex1.html#hypothesis",
    "title": "Hands-on Ex1 - TidyModels",
    "section": "Hypothesis",
    "text": "Hypothesis\nIn the code chunk below, we will be using hypothesise()from the infer package. We will test for independent test.\n\nexam %>%\n  specify(formula = MATHS ~ GENDER) %>%\n  hypothesise(null = \"independence\")\n\nResponse: MATHS (numeric)\nExplanatory: GENDER (factor)\nNull Hypothesis: independence\n# A tibble: 322 × 2\n   MATHS GENDER\n   <dbl> <fct> \n 1     9 Male  \n 2    22 Female\n 3    16 Male  \n 4    77 Male  \n 5    11 Male  \n 6    16 Female\n 7    21 Male  \n 8    18 Male  \n 9    19 Male  \n10    49 Male  \n# … with 312 more rows\n\n\nIn the output above, we can see that the null hypothesis is defined as ‘independence’."
  },
  {
    "objectID": "TM_Hands-on_Ex1/TM_Hands-on_Ex1.html#generate-replicates",
    "href": "TM_Hands-on_Ex1/TM_Hands-on_Ex1.html#generate-replicates",
    "title": "Hands-on Ex1 - TidyModels",
    "section": "Generate Replicates",
    "text": "Generate Replicates\nWe ar using the generate() from infer package\nNote that in reps parameter, when we indicate reps = 1,000, it means that each value is replicated 1,000 times following a randomised. This is not to be confused with oversampling which is used when there is a mismatch number of data points between two variables.\nIn our case, we do not have this issue. However, what we want to ensure is that there is sufficient records for us to do our analysis. Since we specified “permit”, it will, for each replicate, the input value will be randomly reassigned (without replacement) to a new output value in the sample.\nThis step is helpful when our dataset is small or we have doubts about how representative of the population it is.\n\nset.seed(1234)\nexam %>%\n  specify(formula = MATHS ~ GENDER ) %>%\n  hypothesise(null = \"independence\") %>%\n  generate(reps = 1000, type = \"permute\") %>%\n\n  View()"
  },
  {
    "objectID": "TM_Hands-on_Ex1/TM_Hands-on_Ex1.html#calculate-summary-statistics",
    "href": "TM_Hands-on_Ex1/TM_Hands-on_Ex1.html#calculate-summary-statistics",
    "title": "Hands-on Ex1 - TidyModels",
    "section": "Calculate Summary Statistics",
    "text": "Calculate Summary Statistics\nWe will use calculate()from infer package to calculate summary statistics. The stat= parameter allows us to specify the statistics we need. These are valid inputs: “mean”, “median”, “sum”, “sd”, “prop”, “count”, “diff in means”, “diff in medians”, “diff in props”, “Chisq”, “F”, “slope”, “correlation”, “t”, “z”, “ratio of props”, “odds ratio”\nWe will compute the summary statistics of our 1,000 permutations.\n\nset.seed(1234)\nnull_distribution_maths <- exam %>%\n  specify(formula = MATHS ~ GENDER ) %>%\n  hypothesise(null = \"independence\") %>%\n  generate(reps = 1000, type = \"permute\") %>%\n  calculate(stat = \"diff in means\",\n            order = c(\"Female\",\"Male\")) \n\nnull_distribution_maths\n\nResponse: MATHS (numeric)\nExplanatory: GENDER (factor)\nNull Hypothesis: independence\n# A tibble: 1,000 × 2\n   replicate   stat\n       <int>  <dbl>\n 1         1 -6.12 \n 2         2  3.12 \n 3         3 -4.13 \n 4         4 -6.67 \n 5         5  1.46 \n 6         6 -1.35 \n 7         7  0.467\n 8         8  1.64 \n 9         9 -1.99 \n10        10  1.64 \n# … with 990 more rows\n\n\n\n#based on observed / actual values\nobs_diff_means <- exam %>%\n  specify(formula = MATHS ~ GENDER ) %>%\n  calculate(stat = \"diff in means\",\n            order = c(\"Female\",\"Male\")) \n\nobs_diff_means\n\nResponse: MATHS (numeric)\nExplanatory: GENDER (factor)\n# A tibble: 1 × 1\n   stat\n  <dbl>\n1  1.40\n\n\nThe output shows that the difference in mean is 1.40.\n\nvisualise(null_distribution_maths) +\n  shade_p_value(obs_stat = obs_diff_means,\n                direction = 'both')\n\n\n\n\n\nnull_distribution_maths %>%\n  get_p_value(obs_stat = obs_diff_means,\n              direction = 'both')\n\n# A tibble: 1 × 1\n  p_value\n    <dbl>\n1   0.496\n\n\nBased on the simulation, the p-value is within the sampled data? We do not have sufficient statistical evidence to reject the null hypothesis (observed difference is not statistical significant)."
  }
]